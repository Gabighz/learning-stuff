buildscript {
    ext {
        springBootVersion = '3.0.5'
        springDependencyManagementVersion = '1.1.0'
        springCloudVersion = '2022.0.1'
        groovyVersion = '4.0.5'
        spockVersion = '2.3-groovy-4.0'
    }
}

plugins {
    id 'java'
    id 'groovy'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
}

subprojects {
    group = 'com.exchange'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '19'

    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
    }

    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.cloud:spring-cloud-starter-config'
        implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

        implementation platform("org.apache.groovy:groovy-bom:${groovyVersion}")
        testImplementation platform("org.spockframework:spock-bom:${spockVersion}")
        testImplementation 'org.spockframework:spock-core'
        testImplementation 'org.spockframework:spock-spring'
        testImplementation 'cglib:cglib-nodep:3.3.0'

        implementation 'org.jetbrains:annotations:23.0.0'
        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}